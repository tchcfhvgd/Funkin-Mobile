
# This is a basic workflow to help you get started with Actions.

name: Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"

  buildAndroid:
    name: buildAndroid
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: true

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6
      
      - name: Setting up Android NDK
        id: setup-ndk
        uses: nttld/setup-ndk@main
        with:
          ndk-version: r27c
          add-to-path: false
      
      - name: Restore Previous Cache
        id: cache-debug-build-android-restore
        uses: actions/cache/restore@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build
      
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp
          haxelib git lime https://github.com/FunkinDroidTeam/lime
          haxelib git FlxPartialSound https://github.com/FunkinDroidTeam/FlxPartialSound
          haxelib git openfl https://github.com/FunkinDroidTeam/openfl
          haxelib git flixel https://github.com/FunkinDroidTeam/flixel
          haxelib git flixel-text-input https://github.com/FunkinCrew/flixel-text-input
          haxelib git flixel-addons https://github.com/FunkinCrew/flixel-addons dev-funkin-latest
          haxelib git funkin.vis https://github.com/FunkinCrew/funkVis
          haxelib git grig.audio https://gitlab.com/haxe-grig/grig.audio.git
          haxelib git haxeui-core https://github.com/haxeui/haxeui-core
          haxelib git haxeui-flixel https://github.com/haxeui/haxeui-flixel
          haxelib git hscript https://github.com/FunkinCrew/hscript
          haxelib git hxcpp-debug-server https://github.com/FunkinCrew/hxcpp-debugger
          haxelib git hxdiscord_rpc https://github.com/FunkinCrew/hxdiscord_rpc
          haxelib git hxjsonast https://github.com/nadako/hxjsonast
          haxelib git json2object https://github.com/FunkinCrew/json2object
          haxelib install hxp 1.3.0
          haxelib git jsonpatch https://github.com/EliteMasterEric/jsonpatch
          haxelib git jsonpath https://github.com/EliteMasterEric/jsonpath
          haxelib git mconsole https://github.com/massive-oss/mconsole
          haxelib git mcover https://github.com/massive-oss/mcover
          haxelib git mockatoo https://github.com/FunkinCrew/mockatoo
          haxelib git munit https://github.com/FunkinCrew/MassiveUnit
          haxelib git newgrounds https://github.com/Geokureli/Newgrounds
          haxelib git polymod https://github.com/Vortex2Oblivion/scriptless-polymod
          haxelib git thx.core https://github.com/fponticelli/thx.core
          haxelib git thx.semver https://github.com/fponticelli/thx.semver
          haxelib install hxvlc 2.1.2
          haxelib install format 3.5.0
          haxelib install hamcrest 3.0.0
          haxelib install extension-androidtools
          haxelib git flxanimate https://github.com/FunkinCrew/flxanimate
          haxelib list
      
      - name: Setup Lime
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT ${{ steps.setup-ndk.outputs.ndk-path }}
          haxelib run lime config JAVA_HOME $JAVA_HOME_17_X64
          haxelib run lime config ANDROID_SETUP true
          haxelib set flixel 6.0.0
          
      - name: Compile
        run: haxelib run lime build android
      
      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-android-build") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }
      - name: Save Current Cache
        id: cache-release-build-android-save
        uses: actions/cache/save@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build
      
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: buildAndroid
          path: export/release/android/bin/app/build/outputs/apk/debug
